{\rtf1\ansi\ansicpg1252\cocoartf1504\cocoasubrtf810
{\fonttbl\f0\fswiss\fcharset0 Helvetica;}
{\colortbl;\red255\green255\blue255;\red127\green127\blue127;\red127\green127\blue127;}
{\*\expandedcolortbl;;\csgenericrgb\c49804\c49804\c49804;\csgenericrgb\c49804\c49804\c49804;}
\margl1440\margr1440\vieww10800\viewh8400\viewkind0
\pard\tx720\tx1440\tx2160\tx2880\tx3600\tx4320\tx5040\tx5760\tx6480\tx7200\tx7920\tx8640\pardirnatural\partightenfactor0

\f0\fs24 \cf0 1) Have the NodeJS server render views/index.ejs that has the html content for the client whenever the client requests \'93/\'93\
\
	In routings/index.js:\
	
\b app.get(\'93/\'93, function (req, res)\{\
		res.render(\'93index\'94, \{\});\
	\});
\b0 \
\
2) In the client code, have a JS code that asks the user for their name and stores this user input in a variable called name.\
\
	
\b <script>\
		var name = prompt(\'93What is your name?\'94);\
	</script>
\b0 \
\
3) Have the client send information to the server (EMIT) \'93got_a_new_user\'94 and pass \'93name\'94 to the server.\
\
	
\b <script>\
\pard\tx720\tx1440\tx2160\tx2880\tx3600\tx4320\tx5040\tx5760\tx6480\tx7200\tx7920\tx8640\pardirnatural\partightenfactor0
\cf0 		var name = prompt(\'93What is your name?\'94);\
		io = io.connect();\
		io.emit(\'93got_a_new_user\'94, \{name: name\});\
	</script>
\b0 \
\pard\tx720\tx1440\tx2160\tx2880\tx3600\tx4320\tx5040\tx5760\tx6480\tx7200\tx7920\tx8640\pardirnatural\partightenfactor0
\cf0 \
4) Have the server listen for an event called \'93got_a_new_user\'94, and when that event gets triggered.. 	a. Have the server BROADCAST an event called \'93new_user\'94 to the clients with the name of	the new user attached to this event.\
\
		
\b app.io.route(\'93got_a_new_user\'94, function(req)\{\
			app.io.broadcast(\'93new_user\'94, \{new_user_name: req.data.name \});\
		\});
\b0 		\
\
	b. We store the name/sessionID of the new user in a variable/array/hash called users.\
\
		
\b var users = \{\};\
		\cf2 // add users array here
\b0 \cf0 \
	\
	c. To the person who sent this request, we EMIT an event called \'93existing_users\'94 with all the\
	users\'92 data.\
\
		
\b app.io.route(\'93got_a_new_user\'94, function(req)\{\
\pard\tx720\tx1440\tx2160\tx2880\tx3600\tx4320\tx5040\tx5760\tx6480\tx7200\tx7920\tx8640\pardirnatural\partightenfactor0
\cf0 			app.io.broadcast(\'93new_user\'94, \{new_user_name: req.data.name \});\
			\cf2 // add info here\cf0 \
			req.io.emit(\'93existing_users\'94, users);\
		\});
\b0 	\
\pard\tx720\tx1440\tx2160\tx2880\tx3600\tx4320\tx5040\tx5760\tx6480\tx7200\tx7920\tx8640\pardirnatural\partightenfactor0
\cf0 \
\
5) Have the client listen for an event called \'93new_user\'94 and when this event gets triggered, have the client render this information in jQuery somewhere in the HTML.\
\
		
\b <script>\
\pard\tx720\tx1440\tx2160\tx2880\tx3600\tx4320\tx5040\tx5760\tx6480\tx7200\tx7920\tx8640\pardirnatural\partightenfactor0
\cf0 			var name = prompt(\'93What is your name?\'94);\
			io = io.connect();\
			io.emit(\'93got_a_new_user\'94, \{name: name\});\
			\
			io.on(\'93new_user\'94, function(data)\{\
				\cf2 // render this info in the HTML\cf0 \
			\});\
		</script>
\b0 \
\pard\tx720\tx1440\tx2160\tx2880\tx3600\tx4320\tx5040\tx5760\tx6480\tx7200\tx7920\tx8640\pardirnatural\partightenfactor0
\cf0 \
6) Have the server listen for an event called \'93disconnect\'94 and when this occurs, BROADCAST to all the clients an event \'93disconnect_user\'94 with some data (name of the disconnected user). (Note: we\'92ll probably need to pass sessionID or something else to identify a user.)\
\
		
\b \cf2 // Look at documentation
\b0 \cf0 \
\
7) Have the client listen for an event \'93disconnect_user\'94 and when this gets triggered, have the client remove the proper jQuery box.\
\
		
\b \cf3 // Look at documentation}